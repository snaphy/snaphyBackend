{
  "name": "Employee",
  "base": "User",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "properties": {
    "username":{
      "type":"string",
      "template":{
        "type":"input",
        "templateOptions":{
          "type": "text",
          "label": "Enter Username",
          "id":"Username"
        }
      }
    },

    "date":{
      "type":"date",
      "required":false,
      "defaultFn": "now"
    },

    "email":{
      "type":"string",
      "template":{
          "type": "input",
          "templateOptions": {
            "type": "email",
            "label": "Email address",
            "id":"email_"
          }
      }
    },

    "password":{
      "type":"string",
      "template":{
        "type": "input",
        "templateOptions": {
          "type": "password",
          "label": "Enter Password",
          "id": "password_"
        }
      }
    }
  },

  "validations": {
        "rules":{
            "username":{
                "required" : true,
                "minlength": "3"
            },
            "password":{
                "required": true,
                "minlength": "5"
            },
            "email":{
                "required": true
            }
        },
        "messages":{
            "username":{
                "required": "Username is required",
                "minlength": "Minimum permitted length is atleast 3"
            },
            "password":{
                    "required": "Password is required",
                    "minlength": "Password must be of atleast 5 characters"
            },
            "email":{
                "required":"Email is required."
            }
        }
    },

  "relations": {
    "recipes": {
      "type": "hasMany",
      "model": "Recipe",
      "foreignKey": ""
    }
  },
  "tables":{
    "username":{
      "onClick":{
        "state":"dashboard",
        "params":{
          "username":"username"
        }
      }
    },
    "email":{
      "tag":{
        "Pending": "label-warning"
      }
    }

  },
  "filters":{
    "email":{
      "type"  : "$multiSelect",
      "get"   : "/api/email",
      "label" : "Select multiple columns",
      "options":[{
        "id":5,
        "name":"sinu@gmail.com"
        }],
      "getOptionsFromColumn": true
    }
  },


  "widgets":[
    {
      "label":"User Added",
      "icon": "si-users",
      "fetchLocally":true,
      "propObj":{
        "type": "$allTime",
        "where":{
        },
        "dateProp": "date"
      }
    },
    {
      "label":"User Added In A Week",
      "fetchLocally":true,
      "icon": "si-users",
      "propObj":{
        "type": "$week",
        "where":{
        },
        "dateProp": "date"
      }
    },
    {
      "label":"User Added Today",
      "icon": "si-speedometer",
      "fetchLocally":true,
      "propObj":{
        "type": "$today",
        "where":{
        },
        "dateProp": "date"
      }
    }
  ],

  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "staff",
      "permission": "ALLOW",
      "property": "find"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "staff",
      "permission": "ALLOW",
      "property": "findById"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "staff",
      "permission": "ALLOW",
      "property": "findOne"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW",
      "property": "create"
    },
    {
      "principalType": "ROLE",
      "principalId": "staff",
      "permission": "ALLOW",
      "property": "isAdmin"
    },
    {
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "ALLOW",
      "property": "getSchema"
    }
  ],
  "methods": []
}
