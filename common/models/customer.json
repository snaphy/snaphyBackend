{
  "name": "Customer",
  "base": "User",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "widgets": [
    {
      "label": "Total customers added",
      "icon": "si-bar-chart",
      "fetchLocally": true,
      "propObj": {
        "type": "$allTime",
        "where": {},
        "dateProp": "date"
      }
    },
    {
      "label": "Customers added today",
      "fetchLocally": true,
      "icon": "si-calendar",
      "propObj": {
        "type": "$today",
        "where": {},
        "dateProp": "date"
      }
    },
    {
      "label": "Customers added this week",
      "icon": "si-graph",
      "fetchLocally": true,
      "propObj": {
        "type": "$week",
        "where": {},
        "dateProp": "date"
      }
    }
  ],
  "filters": {
    "date": {
      "type": "$date",
      "label": "Customer added between"
    }
  },
  "tables": {
    "profilePic": {
      "display": false
    },
    "password": {
      "display": false
    },
    "date": {
      "date": true,
      "search": "date"
    },
    "firstName": {
      "search": "text"
    },
    "lastName": {
      "search": "text"
    }
  },
  "validationsBackend": {
    "rules": {
      "phoneNumber": {
        "required": true,
        "minlength": "10",
        "maxlength": "10",
        "number": true
      },
      "email": {
        "required": true,
        "email": true
      },
      "firstName": {
        "required": true,
        "minlength": 5
      },
      "password": {
        "required": true,
        "minlength": 5
      }
    },
    "messages": {
      "phoneNumber": {
        "required": "contact number is required",
        "minlength": "Minimum permitted length is atleast 10",
        "number": "Contact number must be a number"
      },
      "email": {
        "required": "email is required"
      },
      "firstName": {
        "required": "first name is required",
        "minlength": "Minimum permitted length is atleast 5"
      },
      "password": {
        "required": "password is required",
        "minlength": "Minimum permitted length is atleast 5"
      }
    }
  },
  "properties": {
    "date": {
      "type": "string",
      "defaultFn": "now",
      "template": {
        "type": "dummy"
      }
    },
    "phoneNumber": {
      "type": "string",
      "required": false,
      "template": {
        "type": "input",
        "templateOptions": {
          "type": "text",
          "label": "Enter  contact number",
          "id": "customerContact"
        }
      }
    },
    "email": {
      "type": "string",
      "required": false,
      "template": {
        "type": "input",
        "templateOptions": {
          "type": "email",
          "label": "Enter  email",
          "id": "customerEmail"
        }
      }
    },
    "firstName": {
      "type": "string",
      "required": true,
      "template": {
        "type": "input",
        "templateOptions": {
          "type": "text",
          "label": "Enter first name",
          "id": "customerFirstName"
        }
      }
    },
    "lastName": {
      "type": "string",
      "template": {
        "type": "input",
        "templateOptions": {
          "type": "text",
          "label": "Enter last name",
          "id": "customerLastName"
        }
      }
    },
    "password": {
      "type": "string",
      "template": {
        "type": "input",
        "templateOptions": {
          "type": "password",
          "label": "Enter password",
          "id": "customerPassword"
        }
      }
    },
    "profilePic": {
      "type": "object",
      "template": {
        "type": "singleFileUpload",
        "templateOptions": {
          "label": "Add customer profile image",
          "containerName": "gruberr-recipes",
          "containerModel": "Container",
          "bind": true
        }
      }
    }
  },
  "validations": [],
  "relations": {
    "recipes": {
      "type": "hasMany",
      "model": "Recipe",
      "foreignKey": "",
      "onCascadeDelete": true,
      "templateOptions": {
        "btnText": "Add Recipe",
        "searchProp": "name",
        "create": false
      }
    },
    "comments": {
      "type": "hasMany",
      "model": "Comments",
      "foreignKey": ""
    },
    "wishlists": {
      "type": "hasOne",
      "model": "Wishlist",
      "foreignKey": "",
      "onCascadeDelete": true
    },
    "chefs": {
      "type": "hasOne",
      "model": "Chef",
      "foreignKey": "",
      "onCascadeDelete": true
    },
    "contactChefs": {
      "type": "hasMany",
      "model": "ContactChef",
      "foreignKey": ""
    },
    "orders": {
      "type": "hasMany",
      "model": "Order",
      "foreignKey": ""
    },
    "courses": {
      "type": "hasMany",
      "model": "Course",
      "foreignKey": "",
      "onCascadeDelete": true,
      "templateOptions": {
        "btnText": "Add Courses to chefs",
        "searchProp": "name",
        "create": true,
        "search": true,
        "hide": false
      }
    },
    "facebookAccessToken": {
      "type": "hasOne",
      "model": "FacebookAccessToken",
      "foreignKey": "",
      "onCascadeDelete": true
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "admin",
      "permission": "ALLOW"
    },
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$unauthenticated",
      "permission": "ALLOW",
      "property": "loginWithFb"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$unauthenticated",
      "permission": "ALLOW",
      "property": "create"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$unauthenticated",
      "permission": "ALLOW",
      "property": "create"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$unauthenticated",
      "permission": "ALLOW",
      "property": "loginWithGoogle"
    }
  ],
  "methods": {}
}
